{"ast":null,"code":"var _jsxFileName = \"/Users/janioviniciusmiara/Desktop/EstudosReact/vnda_ecommerce/src/providers/users.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { url } from '../helpers/constants/urls';\nimport { useAxios } from '../helpers/axios';\nimport { useForm } from './formUser';\nimport { getDefaultUser } from '../types';\nimport { toastAlert } from '../components/alerts';\nconst UserContext = /*#__PURE__*/createContext(null);\nconst initialState = {\n  userList: [getDefaultUser()],\n  isValid: false,\n  status: 'create'\n};\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"GET_USER_LIST\"] = \"GET_USER_LIST\";\n  ActionTypes[\"STATUS\"] = \"STATUS\";\n  ActionTypes[\"DELETE_USER\"] = \"DELETE_USER\";\n})(ActionTypes || (ActionTypes = {}));\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ActionTypes.GET_USER_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: action.userList,\n        error: false\n      });\n\n    case ActionTypes.STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: action.value\n      });\n\n    case ActionTypes.DELETE_USER:\n      const newUserList = state.userList.filter(user => user.id !== action.value);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: newUserList,\n        error: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function useUser() {\n  const {\n    apiClient\n  } = useAxios();\n  const {\n    clearForm,\n    validateUser,\n    user,\n    status,\n    statusError\n  } = useForm();\n  const {\n    0: {\n      userList,\n      isValid\n    },\n    1: dispatch\n  } = useContext(UserContext);\n\n  const getUsers = async () => {\n    try {\n      const {\n        data\n      } = await apiClient.get(url.USER_LIST);\n      dispatch({\n        type: ActionTypes.GET_USER_LIST,\n        userList: data\n      });\n    } catch (err) {\n      toastAlert.error();\n      statusError();\n    }\n  };\n\n  const submitForm = async () => {\n    if (status === 'create') {\n      await createUsers();\n    } else {\n      await udpateUser();\n    }\n  };\n\n  const createUsers = async () => {\n    if (validateUser) {\n      try {\n        await apiClient.post(url.USER_LIST, user);\n        await getUsers();\n        await clearForm();\n        toastAlert.success('Usuario criado com sucesso!');\n        return true;\n      } catch (err) {\n        statusError();\n        toastAlert.error();\n        return false;\n      }\n    }\n  };\n\n  const udpateUser = async () => {\n    const {\n      id\n    } = user;\n\n    try {\n      if (isValid) {\n        await apiClient.patch(`${url.USER_LIST}/${id}`, user);\n        toastAlert.success('Usuario editado com sucesso!');\n        await getUsers();\n        await clearForm();\n        return true;\n      }\n    } catch (err) {\n      statusError();\n      toastAlert.error();\n      return false;\n    }\n  };\n\n  const removeUser = async user => {\n    const {\n      id\n    } = user;\n\n    try {\n      await apiClient.delete(`${url.USER_LIST}/${id}`);\n      await dispatch({\n        type: ActionTypes.DELETE_USER,\n        value: id\n      });\n      toastAlert.success('Usuario removido com sucesso!');\n    } catch (err) {\n      toastAlert.error();\n    }\n  };\n\n  return {\n    userList,\n    user,\n    isValid,\n    getUsers,\n    validateUser,\n    createUsers,\n    submitForm,\n    removeUser\n  };\n}\n\nconst UserProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return __jsx(UserContext.Provider, {\n    value: [state, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { UserContext, UserProvider };","map":{"version":3,"sources":["/Users/janioviniciusmiara/Desktop/EstudosReact/vnda_ecommerce/src/providers/users.tsx"],"names":["React","createContext","useContext","useReducer","url","useAxios","useForm","getDefaultUser","toastAlert","UserContext","initialState","userList","isValid","status","ActionTypes","reducer","state","action","type","GET_USER_LIST","error","STATUS","value","DELETE_USER","newUserList","filter","user","id","useUser","apiClient","clearForm","validateUser","statusError","dispatch","getUsers","data","get","USER_LIST","err","submitForm","createUsers","udpateUser","post","success","patch","removeUser","delete","UserProvider","children"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  Dispatch,\n  FunctionComponent,\n  useContext,\n  useReducer\n} from 'react'\n\nimport { url } from '../helpers/constants/urls'\nimport { useAxios } from '../helpers/axios'\nimport { useForm } from './formUser'\nimport { getDefaultUser, IUser } from '../types'\nimport { toastAlert } from '../components/alerts'\n\nconst UserContext = createContext(null)\n\nconst initialState: {\n  userList: IUser[]\n  isValid: boolean\n  status: string\n} = {\n  userList: [getDefaultUser()],\n  isValid: false,\n  status: 'create'\n}\n\nenum ActionTypes {\n  GET_USER_LIST = 'GET_USER_LIST',\n  STATUS = 'STATUS',\n  DELETE_USER = 'DELETE_USER'\n}\n\ninterface Action {\n  name?: string\n  value?: any\n  user?: IUser\n  isValid?: boolean\n  userList?: IUser[]\n  type: ActionTypes\n}\n\nfunction reducer(state: typeof initialState, action: Action) {\n  switch (action.type) {\n    case ActionTypes.GET_USER_LIST:\n      return { ...state, userList: action.userList, error: false }\n    case ActionTypes.STATUS:\n      return { ...state, status: action.value }\n    case ActionTypes.DELETE_USER:\n      const newUserList = state.userList.filter(\n        user => user.id !== action.value\n      )\n      return { ...state, userList: newUserList, error: false }\n    default:\n      return state\n  }\n}\n\nexport function useUser() {\n  const { apiClient } = useAxios()\n  const { clearForm, validateUser, user, status, statusError } = useForm()\n\n  const [{ userList, isValid }, dispatch] = useContext<\n    [typeof initialState, Dispatch<Action>]\n  >(UserContext)\n\n  const getUsers = async (): Promise<void> => {\n    try {\n      const { data } = await apiClient.get<IUser[]>(url.USER_LIST)\n      dispatch({ type: ActionTypes.GET_USER_LIST, userList: data })\n    } catch (err) {\n      toastAlert.error()\n      statusError()\n    }\n  }\n\n  const submitForm = async () => {\n    if (status === 'create') {\n      await createUsers()\n    } else {\n      await udpateUser()\n    }\n  }\n\n  const createUsers = async () => {\n    if (validateUser) {\n      try {\n        await apiClient.post<IUser>(url.USER_LIST, user)\n        await getUsers()\n        await clearForm()\n        toastAlert.success('Usuario criado com sucesso!')\n        return true\n      } catch (err) {\n        statusError()\n        toastAlert.error()\n        return false\n      }\n    }\n  }\n\n  const udpateUser = async () => {\n    const { id } = user\n    try {\n      if (isValid) {\n        await apiClient.patch(`${url.USER_LIST}/${id}`, user)\n        toastAlert.success('Usuario editado com sucesso!')\n        await getUsers()\n        await clearForm()\n        return true\n      }\n    } catch (err) {\n      statusError()\n      toastAlert.error()\n      return false\n    }\n  }\n\n  const removeUser = async user => {\n    const { id } = user\n    try {\n      await apiClient.delete(`${url.USER_LIST}/${id}`)\n      await dispatch({ type: ActionTypes.DELETE_USER, value: id })\n      toastAlert.success('Usuario removido com sucesso!')\n    } catch (err) {\n      toastAlert.error()\n    }\n  }\n\n  return {\n    userList,\n    user,\n    isValid,\n    getUsers,\n    validateUser,\n    createUsers,\n    submitForm,\n    removeUser\n  }\n}\n\nconst UserProvider: FunctionComponent = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <UserContext.Provider value={[state, dispatch]}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport { UserContext, UserProvider }\n"]},"metadata":{},"sourceType":"module"}